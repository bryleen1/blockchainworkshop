{
	"id": "fbaf8daf296946b4aeb4d5c3cabc2cc2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"bank.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.4;\r\n\r\ncontract myContract{\r\n\r\n    int private bank;\r\n    mapping(address=>int) private accountholders;\r\n\r\n    function depositMoney(int amo) public {\r\n        //limits the transactions to 3\r\n        if (accountholders[msg.sender]<3)\r\n            //sets the table by adding a count to each account\r\n            accountholders[msg.sender] +=1;\r\n            //appends the amount to the bank\r\n            bank+=amo;\r\n    }\r\n\r\n    //checks the number of transactions and returns the count\r\n    function checkCount() view public returns(int ) {\r\n        return accountholders[msg.sender];\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"bank.sol": {
				"myContract": {
					"abi": [
						{
							"inputs": [],
							"name": "checkCount",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amo",
									"type": "int256"
								}
							],
							"name": "depositMoney",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"bank.sol\":66:652  contract myContract{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"bank.sol\":66:652  contract myContract{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x05a3ed89\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2b719ee2\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"bank.sol\":170:478  function depositMoney(int amo) public {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"bank.sol\":549:649  function checkCount() view public returns(int ) {\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"bank.sol\":170:478  function depositMoney(int amo) public {\r... */\n    tag_8:\n        /* \"bank.sol\":290:291  3 */\n      0x03\n        /* \"bank.sol\":263:277  accountholders */\n      0x01\n        /* \"bank.sol\":263:289  accountholders[msg.sender] */\n      0x00\n        /* \"bank.sol\":278:288  msg.sender */\n      caller\n        /* \"bank.sol\":263:289  accountholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"bank.sol\":263:291  accountholders[msg.sender]<3 */\n      slt\n        /* \"bank.sol\":259:400  if (accountholders[msg.sender]<3)\r... */\n      iszero\n      tag_14\n      jumpi\n        /* \"bank.sol\":399:400  1 */\n      0x01\n        /* \"bank.sol\":370:384  accountholders */\n      dup1\n        /* \"bank.sol\":370:396  accountholders[msg.sender] */\n      0x00\n        /* \"bank.sol\":385:395  msg.sender */\n      caller\n        /* \"bank.sol\":370:396  accountholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"bank.sol\":370:400  accountholders[msg.sender] +=1 */\n      dup3\n      dup3\n      sload\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"bank.sol\":259:400  if (accountholders[msg.sender]<3)\r... */\n    tag_14:\n        /* \"bank.sol\":467:470  amo */\n      dup1\n        /* \"bank.sol\":461:465  bank */\n      0x00\n      dup1\n        /* \"bank.sol\":461:470  bank+=amo */\n      dup3\n      dup3\n      sload\n      tag_17\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_17:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"bank.sol\":170:478  function depositMoney(int amo) public {\r... */\n      pop\n      jump\t// out\n        /* \"bank.sol\":549:649  function checkCount() view public returns(int ) {\r... */\n    tag_10:\n        /* \"bank.sol\":591:594  int */\n      0x00\n        /* \"bank.sol\":615:629  accountholders */\n      0x01\n        /* \"bank.sol\":615:641  accountholders[msg.sender] */\n      0x00\n        /* \"bank.sol\":630:640  msg.sender */\n      caller\n        /* \"bank.sol\":615:641  accountholders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"bank.sol\":608:641  return accountholders[msg.sender] */\n      swap1\n      pop\n        /* \"bank.sol\":549:649  function checkCount() view public returns(int ) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_20:\n        /* \"#utility.yul\":52:57   */\n      0x00\n        /* \"#utility.yul\":90:96   */\n      dup2\n        /* \"#utility.yul\":77:97   */\n      calldataload\n        /* \"#utility.yul\":68:97   */\n      swap1\n      pop\n        /* \"#utility.yul\":106:138   */\n      tag_22\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":106:138   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":58:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:410   */\n    tag_7:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":257:259   */\n      0x20\n        /* \"#utility.yul\":245:254   */\n      dup3\n        /* \"#utility.yul\":236:243   */\n      dup5\n        /* \"#utility.yul\":232:255   */\n      sub\n        /* \"#utility.yul\":228:260   */\n      slt\n        /* \"#utility.yul\":225:227   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":273:274   */\n      0x00\n        /* \"#utility.yul\":270:271   */\n      dup1\n        /* \"#utility.yul\":263:275   */\n      revert\n        /* \"#utility.yul\":225:227   */\n    tag_25:\n        /* \"#utility.yul\":316:317   */\n      0x00\n        /* \"#utility.yul\":341:393   */\n      tag_26\n        /* \"#utility.yul\":385:392   */\n      dup5\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":365:374   */\n      dup6\n        /* \"#utility.yul\":361:383   */\n      add\n        /* \"#utility.yul\":341:393   */\n      tag_20\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":331:393   */\n      swap2\n      pop\n        /* \"#utility.yul\":287:403   */\n      pop\n        /* \"#utility.yul\":215:410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":416:531   */\n    tag_27:\n        /* \"#utility.yul\":501:524   */\n      tag_29\n        /* \"#utility.yul\":518:523   */\n      dup2\n        /* \"#utility.yul\":501:524   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":496:499   */\n      dup3\n        /* \"#utility.yul\":489:525   */\n      mstore\n        /* \"#utility.yul\":479:531   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":537:755   */\n    tag_12:\n        /* \"#utility.yul\":628:632   */\n      0x00\n        /* \"#utility.yul\":666:668   */\n      0x20\n        /* \"#utility.yul\":655:664   */\n      dup3\n        /* \"#utility.yul\":651:669   */\n      add\n        /* \"#utility.yul\":643:669   */\n      swap1\n      pop\n        /* \"#utility.yul\":679:748   */\n      tag_32\n        /* \"#utility.yul\":745:746   */\n      0x00\n        /* \"#utility.yul\":734:743   */\n      dup4\n        /* \"#utility.yul\":730:747   */\n      add\n        /* \"#utility.yul\":721:727   */\n      dup5\n        /* \"#utility.yul\":679:748   */\n      tag_27\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":633:755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":761:1286   */\n    tag_16:\n        /* \"#utility.yul\":800:803   */\n      0x00\n        /* \"#utility.yul\":819:838   */\n      tag_34\n        /* \"#utility.yul\":836:837   */\n      dup3\n        /* \"#utility.yul\":819:838   */\n      tag_30\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":814:838   */\n      swap2\n      pop\n        /* \"#utility.yul\":852:871   */\n      tag_35\n        /* \"#utility.yul\":869:870   */\n      dup4\n        /* \"#utility.yul\":852:871   */\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":847:871   */\n      swap3\n      pop\n        /* \"#utility.yul\":1040:1041   */\n      dup2\n        /* \"#utility.yul\":972:1038   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":968:1042   */\n      sub\n        /* \"#utility.yul\":965:966   */\n      dup4\n        /* \"#utility.yul\":961:1043   */\n      sgt\n        /* \"#utility.yul\":956:957   */\n      0x00\n        /* \"#utility.yul\":953:954   */\n      dup4\n        /* \"#utility.yul\":949:958   */\n      slt\n        /* \"#utility.yul\":942:959   */\n      iszero\n        /* \"#utility.yul\":938:1044   */\n      and\n        /* \"#utility.yul\":935:937   */\n      iszero\n      tag_36\n      jumpi\n        /* \"#utility.yul\":1047:1065   */\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":935:937   */\n    tag_36:\n        /* \"#utility.yul\":1227:1228   */\n      dup2\n        /* \"#utility.yul\":1159:1225   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1155:1229   */\n      sub\n        /* \"#utility.yul\":1152:1153   */\n      dup4\n        /* \"#utility.yul\":1148:1230   */\n      slt\n        /* \"#utility.yul\":1144:1145   */\n      0x00\n        /* \"#utility.yul\":1141:1142   */\n      dup4\n        /* \"#utility.yul\":1137:1146   */\n      slt\n        /* \"#utility.yul\":1133:1231   */\n      and\n        /* \"#utility.yul\":1130:1132   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":1234:1252   */\n      tag_40\n      tag_38\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1130:1132   */\n    tag_39:\n        /* \"#utility.yul\":1278:1279   */\n      dup3\n        /* \"#utility.yul\":1275:1276   */\n      dup3\n        /* \"#utility.yul\":1271:1280   */\n      add\n        /* \"#utility.yul\":1264:1280   */\n      swap1\n      pop\n        /* \"#utility.yul\":804:1286   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1292:1368   */\n    tag_30:\n        /* \"#utility.yul\":1328:1335   */\n      0x00\n        /* \"#utility.yul\":1357:1362   */\n      dup2\n        /* \"#utility.yul\":1346:1362   */\n      swap1\n      pop\n        /* \"#utility.yul\":1336:1368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1374:1554   */\n    tag_38:\n        /* \"#utility.yul\":1422:1499   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1419:1420   */\n      0x00\n        /* \"#utility.yul\":1412:1500   */\n      mstore\n        /* \"#utility.yul\":1519:1523   */\n      0x11\n        /* \"#utility.yul\":1516:1517   */\n      0x04\n        /* \"#utility.yul\":1509:1524   */\n      mstore\n        /* \"#utility.yul\":1543:1547   */\n      0x24\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1533:1548   */\n      revert\n        /* \"#utility.yul\":1560:1680   */\n    tag_23:\n        /* \"#utility.yul\":1632:1655   */\n      tag_44\n        /* \"#utility.yul\":1649:1654   */\n      dup2\n        /* \"#utility.yul\":1632:1655   */\n      tag_30\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1625:1630   */\n      dup2\n        /* \"#utility.yul\":1622:1656   */\n      eq\n        /* \"#utility.yul\":1612:1614   */\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1670:1671   */\n      0x00\n        /* \"#utility.yul\":1667:1668   */\n      dup1\n        /* \"#utility.yul\":1660:1672   */\n      revert\n        /* \"#utility.yul\":1612:1614   */\n    tag_45:\n        /* \"#utility.yul\":1602:1680   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220103fca7dba7f80800b26cb2b6c8df2ca15af469746c47d4671ad346794da4cf664736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102f8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806305a3ed891461003b5780632b719ee214610057575b600080fd5b6100556004803603810190610050919061018b565b610075565b005b61005f61012f565b60405161006c91906101c3565b60405180910390f35b6003600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205412156101145760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461010c91906101de565b925050819055505b8060008082825461012591906101de565b9250508190555050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600081359050610185816102ab565b92915050565b60006020828403121561019d57600080fd5b60006101ab84828501610176565b91505092915050565b6101bd81610272565b82525050565b60006020820190506101d860008301846101b4565b92915050565b60006101e982610272565b91506101f483610272565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561022f5761022e61027c565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156102675761026661027c565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6102b481610272565b81146102bf57600080fd5b5056fea2646970667358221220103fca7dba7f80800b26cb2b6c8df2ca15af469746c47d4671ad346794da4cf664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A3ED89 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x2B719EE2 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SLT ISZERO PUSH2 0x114 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x185 DUP2 PUSH2 0x2AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AB DUP5 DUP3 DUP6 ADD PUSH2 0x176 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BD DUP2 PUSH2 0x272 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9 DUP3 PUSH2 0x272 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4 DUP4 PUSH2 0x272 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0x22F JUMPI PUSH2 0x22E PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x267 JUMPI PUSH2 0x266 PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2B4 DUP2 PUSH2 0x272 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT EXTCODEHASH 0xCA PUSH30 0xBA7F80800B26CB2B6C8DF2CA15AF469746C47D4671AD346794DA4CF66473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "66:586:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1683:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "68:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "90:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "77:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "77:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "68:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "106:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "106:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "106:32:1"
														}
													]
												},
												"name": "abi_decode_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "36:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "44:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "52:5:1",
														"type": ""
													}
												],
												"src": "7:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:195:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "261:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "273:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "263:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "263:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "263:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "236:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "245:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "232:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "232:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "228:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:32:1"
															},
															"nodeType": "YulIf",
															"src": "225:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "287:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "302:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "316:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "306:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "331:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "365:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "376:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "361:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "361:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "385:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "341:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "341:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "331:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:1",
														"type": ""
													}
												],
												"src": "150:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "479:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "496:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "518:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "501:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "489:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "489:36:1"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "467:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "474:3:1",
														"type": ""
													}
												],
												"src": "416:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "655:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "666:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "651:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "651:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "643:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "721:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "745:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "730:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "679:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "679:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "679:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "605:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "617:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "628:4:1",
														"type": ""
													}
												],
												"src": "537:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "804:482:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "814:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "836:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "819:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "819:19:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "814:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "847:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "869:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "852:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:19:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "847:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1045:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1047:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1047:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1047:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "953:1:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "956:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "949:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "949:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "942:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "942:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "965:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "972:66:1",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1040:1:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "968:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "968:74:1"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "961:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "961:82:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "938:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:106:1"
															},
															"nodeType": "YulIf",
															"src": "935:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1232:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1234:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1234:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1234:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "1141:1:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1144:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1152:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1159:66:1",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1227:1:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1155:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1155:74:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1148:82:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:98:1"
															},
															"nodeType": "YulIf",
															"src": "1130:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1264:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1275:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1278:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1271:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1264:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "791:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "794:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "800:3:1",
														"type": ""
													}
												],
												"src": "761:525:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1336:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1346:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1357:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1346:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1318:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1328:7:1",
														"type": ""
													}
												],
												"src": "1292:76:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1402:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1419:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1412:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1412:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1516:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1509:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1509:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1374:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1602:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1658:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1667:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1670:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1660:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1660:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1660:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1625:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1649:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "1632:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1632:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1622:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1622:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1615:42:1"
															},
															"nodeType": "YulIf",
															"src": "1612:2:1"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"src": "1560:120:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x >= 0 and y > (maxValue - x)\n        if and(iszero(slt(x, 0)), sgt(y, sub(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        // underflow, if x < 0 and y < (minValue - x)\n        if and(slt(x, 0), slt(y, sub(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806305a3ed891461003b5780632b719ee214610057575b600080fd5b6100556004803603810190610050919061018b565b610075565b005b61005f61012f565b60405161006c91906101c3565b60405180910390f35b6003600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205412156101145760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461010c91906101de565b925050819055505b8060008082825461012591906101de565b9250508190555050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600081359050610185816102ab565b92915050565b60006020828403121561019d57600080fd5b60006101ab84828501610176565b91505092915050565b6101bd81610272565b82525050565b60006020820190506101d860008301846101b4565b92915050565b60006101e982610272565b91506101f483610272565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561022f5761022e61027c565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156102675761026661027c565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6102b481610272565b81146102bf57600080fd5b5056fea2646970667358221220103fca7dba7f80800b26cb2b6c8df2ca15af469746c47d4671ad346794da4cf664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A3ED89 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x2B719EE2 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SLT ISZERO PUSH2 0x114 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x185 DUP2 PUSH2 0x2AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AB DUP5 DUP3 DUP6 ADD PUSH2 0x176 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BD DUP2 PUSH2 0x272 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9 DUP3 PUSH2 0x272 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4 DUP4 PUSH2 0x272 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0x22F JUMPI PUSH2 0x22E PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x267 JUMPI PUSH2 0x266 PUSH2 0x27C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2B4 DUP2 PUSH2 0x272 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT EXTCODEHASH 0xCA PUSH30 0xBA7F80800B26CB2B6C8DF2CA15AF469746C47D4671AD346794DA4CF66473 PUSH16 0x6C634300080400330000000000000000 ",
							"sourceMap": "66:586:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;170:308;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;549:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;170:308;290:1;263:14;:26;278:10;263:26;;;;;;;;;;;;;;;;:28;259:141;;;399:1;370:14;:26;385:10;370:26;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;259:141;467:3;461:4;;:9;;;;;;;:::i;:::-;;;;;;;;170:308;:::o;549:100::-;591:3;615:14;:26;630:10;615:26;;;;;;;;;;;;;;;;608:33;;549:100;:::o;7:137:1:-;52:5;90:6;77:20;68:29;;106:32;132:5;106:32;:::i;:::-;58:86;;;;:::o;150:260::-;208:6;257:2;245:9;236:7;232:23;228:32;225:2;;;273:1;270;263:12;225:2;316:1;341:52;385:7;376:6;365:9;361:22;341:52;:::i;:::-;331:62;;287:116;215:195;;;;:::o;416:115::-;501:23;518:5;501:23;:::i;:::-;496:3;489:36;479:52;;:::o;537:218::-;628:4;666:2;655:9;651:18;643:26;;679:69;745:1;734:9;730:17;721:6;679:69;:::i;:::-;633:122;;;;:::o;761:525::-;800:3;819:19;836:1;819:19;:::i;:::-;814:24;;852:19;869:1;852:19;:::i;:::-;847:24;;1040:1;972:66;968:74;965:1;961:82;956:1;953;949:9;942:17;938:106;935:2;;;1047:18;;:::i;:::-;935:2;1227:1;1159:66;1155:74;1152:1;1148:82;1144:1;1141;1137:9;1133:98;1130:2;;;1234:18;;:::i;:::-;1130:2;1278:1;1275;1271:9;1264:16;;804:482;;;;:::o;1292:76::-;1328:7;1357:5;1346:16;;1336:32;;;:::o;1374:180::-;1422:77;1419:1;1412:88;1519:4;1516:1;1509:15;1543:4;1540:1;1533:15;1560:120;1632:23;1649:5;1632:23;:::i;:::-;1625:5;1622:34;1612:2;;1670:1;1667;1660:12;1612:2;1602:78;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "152000",
								"executionCost": "196",
								"totalCost": "152196"
							},
							"external": {
								"checkCount()": "1226",
								"depositMoney(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 652,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 652,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 652,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 652,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 652,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 652,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 652,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 652,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 652,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 652,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 652,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 652,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 652,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 652,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 652,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 652,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 652,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 652,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220103fca7dba7f80800b26cb2b6c8df2ca15af469746c47d4671ad346794da4cf664736f6c63430008040033",
									".code": [
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "5A3ED89"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "2B719EE2"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 652,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 170,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 170,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 290,
											"end": 291,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 263,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 263,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 288,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 263,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 263,
											"end": 289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 263,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 263,
											"end": 289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 263,
											"end": 289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 263,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 263,
											"end": 289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 263,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 263,
											"end": 289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 289,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 263,
											"end": 289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 291,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 259,
											"end": 400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 259,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 259,
											"end": 400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 395,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 370,
											"end": 396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 370,
											"end": 396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 370,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 370,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 370,
											"end": 400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 370,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 259,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 467,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 461,
											"end": 470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 461,
											"end": 470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 461,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 461,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 549,
											"end": 649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 591,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 615,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 640,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 615,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 615,
											"end": 641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 608,
											"end": 641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 649,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 52,
											"end": 57,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 96,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 68,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 68,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 106,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 106,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 106,
											"end": 138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 106,
											"end": 138,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 106,
											"end": 138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 58,
											"end": 144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 58,
											"end": 144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 58,
											"end": 144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 58,
											"end": 144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 58,
											"end": 144,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 410,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 150,
											"end": 410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 236,
											"end": 243,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 232,
											"end": 255,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 228,
											"end": 260,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 225,
											"end": 227,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 225,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 225,
											"end": 227,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 273,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 271,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 263,
											"end": 275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 225,
											"end": 227,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 225,
											"end": 227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 385,
											"end": 392,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 361,
											"end": 383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 341,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 393,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 341,
											"end": 393,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 341,
											"end": 393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 331,
											"end": 393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 331,
											"end": 393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 215,
											"end": 410,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 215,
											"end": 410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 215,
											"end": 410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 215,
											"end": 410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 215,
											"end": 410,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 416,
											"end": 531,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 416,
											"end": 531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 501,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 518,
											"end": 523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 501,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 501,
											"end": 524,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 524,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 501,
											"end": 524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 496,
											"end": 499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 489,
											"end": 525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 479,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 479,
											"end": 531,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 537,
											"end": 755,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 537,
											"end": 755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 651,
											"end": 669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 643,
											"end": 669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 643,
											"end": 669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 679,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 745,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 730,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 721,
											"end": 727,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 679,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 679,
											"end": 748,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 748,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 679,
											"end": 748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 633,
											"end": 755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 633,
											"end": 755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 761,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 761,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 800,
											"end": 803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 836,
											"end": 837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 819,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 819,
											"end": 838,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 819,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 819,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 814,
											"end": 838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 814,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 869,
											"end": 870,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 852,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 852,
											"end": 871,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 871,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 852,
											"end": 871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 847,
											"end": 871,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 847,
											"end": 871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1038,
											"name": "PUSH",
											"source": 1,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1042,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 965,
											"end": 966,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1043,
											"name": "SGT",
											"source": 1
										},
										{
											"begin": 956,
											"end": 957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 954,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 949,
											"end": 958,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 942,
											"end": 959,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 938,
											"end": 1044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 935,
											"end": 937,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 935,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1047,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1047,
											"end": 1065,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1065,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1047,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 937,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 935,
											"end": 937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1225,
											"name": "PUSH",
											"source": 1,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1229,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1230,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1142,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1146,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1231,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1132,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1130,
											"end": 1132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1132,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1130,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1286,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1292,
											"end": 1368,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1292,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1368,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1374,
											"end": 1554,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1374,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1499,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1419,
											"end": 1420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1523,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1516,
											"end": 1517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1509,
											"end": 1524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1548,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1680,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1560,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1668,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1672,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1680,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"checkCount()": "2b719ee2",
							"depositMoney(int256)": "05a3ed89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"checkCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amo\",\"type\":\"int256\"}],\"name\":\"depositMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"bank.sol\":\"myContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"bank.sol\":{\"keccak256\":\"0x9bc1c8c36aaca3fa5ca9e5954dc2e61d93570ba503aec258db9cb39d2d57fe65\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://23615043a9961e6da7ab51a7a7128866b241f7321076c4f096e4b60702a2b5a1\",\"dweb:/ipfs/QmSeJ24mA43XGdACetreLqC2j1CeLph1uo3SfFmqMxJgy7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "bank.sol:myContract",
								"label": "bank",
								"offset": 0,
								"slot": "0",
								"type": "t_int256"
							},
							{
								"astId": 7,
								"contract": "bank.sol:myContract",
								"label": "accountholders",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_int256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_int256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => int256)",
								"numberOfBytes": "32",
								"value": "t_int256"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"bank.sol": {
				"ast": {
					"absolutePath": "bank.sol",
					"exportedSymbols": {
						"myContract": [
							43
						]
					},
					"id": 44,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "myContract",
							"nameLocation": "75:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "bank",
									"nameLocation": "106:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "94:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "94:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "accountholders",
									"nameLocation": "147:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "117:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
										"typeString": "mapping(address => int256)"
									},
									"typeName": {
										"id": 6,
										"keyType": {
											"id": 4,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "117:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
											"typeString": "mapping(address => int256)"
										},
										"valueType": {
											"id": 5,
											"name": "int",
											"nodeType": "ElementaryTypeName",
											"src": "134:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "208:270:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 12,
															"name": "accountholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "263:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 15,
														"indexExpression": {
															"expression": {
																"id": 13,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "278:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "278:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "263:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "290:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "263:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 25,
												"nodeType": "IfStatement",
												"src": "259:141:0",
												"trueBody": {
													"expression": {
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"id": 18,
																"name": "accountholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "370:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																	"typeString": "mapping(address => int256)"
																}
															},
															"id": 21,
															"indexExpression": {
																"expression": {
																	"id": 19,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "385:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "385:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "370:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "399:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "370:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 24,
													"nodeType": "ExpressionStatement",
													"src": "370:30:0"
												}
											},
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 26,
														"name": "bank",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "461:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 27,
														"name": "amo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "467:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "461:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "461:9:0"
											}
										]
									},
									"functionSelector": "05a3ed89",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositMoney",
									"nameLocation": "179:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "amo",
												"nameLocation": "196:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "192:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 8,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "192:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:9:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:0:0"
									},
									"scope": 43,
									"src": "170:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "597:52:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 36,
														"name": "accountholders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "615:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
															"typeString": "mapping(address => int256)"
														}
													},
													"id": 39,
													"indexExpression": {
														"expression": {
															"id": 37,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "630:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "630:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "615:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 35,
												"id": 40,
												"nodeType": "Return",
												"src": "608:33:0"
											}
										]
									},
									"functionSelector": "2b719ee2",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkCount",
									"nameLocation": "558:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "591:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 33,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "591:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:6:0"
									},
									"scope": 43,
									"src": "549:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 44,
							"src": "66:586:0",
							"usedErrors": []
						}
					],
					"src": "39:613:0"
				},
				"id": 0
			}
		}
	}
}